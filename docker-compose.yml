# Compose for a 3-node PostgreSQL 10 cluster with Consul
# as DCS.

patroni_consul:
    container_name: patroni_consul
    image: consul:1.0.1
    environment:
      #CONSUL_BIND_INTERFACE: eth0
      CONSUL_BIND: 0.0.0.0
      CONSUL_BOOTSTRAP: "true"
    #command: --etcd
#$ docker run -d --net=host -e 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}' 
#consul agent -server -bind=<external ip> -retry-join=<root agent ip> -bootstrap-expect=<number of server agents>


dbnode1:
    image: patroniconsul
    hostname: dbnode1
    links:
        - patroni_consul:patroni_consul
    volumes:
        - ./patroni:/patroni
    env_file: docker/secrets.env
    environment:
        #PATRONI_ETCD_HOST: patroni_etcd:2379
        PATRONI_CONSUL_HOST: patroni_consul:8500
        PATRONI_NAME: dbnode1
        PATRONI_SCOPE: testcluster

dbnode2:
    image: patroniconsul
    hostname: dbnode2
    links:
        - patroni_consul:patroni_consul
    volumes:
        - ./patroni:/patroni
    env_file: docker/secrets.env
    environment:
        #PATRONI_ETCD_HOST: patroni_etcd:2379
        PATRONI_CONSUL_HOST: patroni_consul:8500
        PATRONI_NAME: dbnode2
        PATRONI_SCOPE: testcluster

dbnode3:
    image: patroniconsul
    hostname: dbnode3
    links:
        - patroni_consul:patroni_consul
    volumes:
        - ./patroni:/patroni
    env_file: docker/secrets.env
    environment:
        #PATRONI_ETCD_HOST: patroni_etcd:2379
        PATRONI_CONSUL_HOST: patroni_consul:8500
        PATRONI_NAME: dbnode3
        PATRONI_SCOPE: testcluster

haproxy:
    image: patroniconsul
    links:
        - patroni_consul:patroni_consul
    ports:
        - "5000:5000"
        - "5001:5001"
    environment:
        PATRONI_CONSUL_HOST: patroni_consul:8500
        PATRONI_SCOPE: testcluster
    command: --confd
